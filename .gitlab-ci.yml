stages:
  - build
  - stage
  - production

variables:
  CONTAINER_TEST_IMAGE: registry.gitlab.com/chrl/bottalk-cli:$CI_BUILD_REF_NAME
  CONTAINER_RELEASE_IMAGE: registry.gitlab.com/chrl/bottalk-cli:latest


compile-go-1.11-debian:
  image: golang:1.11
  stage: build
  script:
# Dumb workaround because I'm too lazy to mess with the $GOPATH
  - export BUILDPATH=$(pwd)
  - mkdir -pv /go/src/gitlab.com/chrl/bottalk-cli
  - cp -Rv ./* /go/src/gitlab.com/chrl/bottalk-cli
  - cd /go/src/gitlab.com/chrl/bottalk-cli
  - go get -v .
  - go build main.go
# Dumb workaround pt2
  - cp -v /go/bin/bottalk-cli $BUILDPATH/
  artifacts:
    when: on_success
    paths:
    - ./bottalk-cloi
  cache:
    paths:
    - ./bottalk-cli

stage-bottalk-alpine:
  services:
  - docker:dind
  stage: stage
  when: on_success
  only:
  - master
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/chrl/bottalk-cli .
    - docker push registry.gitlab.com/chrl/bottalk-cli
    - docker rm -f bottalk-cli-staging

production-redacted-alpine:
  image: alpine
  stage: production
  when: on_success
  only:
  - production
  script:
    - echo "Replace me with deploy scripts!"